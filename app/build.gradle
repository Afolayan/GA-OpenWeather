plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.afolayanseyi.gaopenweather"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$collapsing_toolbar"

    implementation "com.google.android.gms:play-services-location:$play_service"

    // dagger core
    implementation "com.google.dagger:dagger:$dagger_2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_2_version"

    // dagger android
    implementation "com.google.dagger:dagger-android:$dagger_2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_2_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:$rx_java2_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // testing
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"
    testImplementation "androidx.arch.core:core-testing:$core_testing"
    testImplementation "androidx.test:runner:$test_runner"
    testImplementation "org.mockito:mockito-core:$mockito_core"
    testImplementation "org.powermock:powermock-core:$powermock_version"
    testImplementation "org.powermock:powermock-module-testng:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
}